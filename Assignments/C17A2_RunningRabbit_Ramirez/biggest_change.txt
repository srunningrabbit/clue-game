/*
Shania Jo RunningRabbit and Amira Ramirez Gonzalez
*/

/*
BEFORE

Prior to the change, we had two of our variables "initial" and "doorDirection"
be public, so we could access them in Board.java using .initial and
.doorDirection. We realized in the code review that this wasn't good practice
considering we still left the getters in as well.
*/

public class BoardCell {
    public int row;
    public int column;
    public char initial;
    public DoorDirection doorDirection;

    /*
    UNRELATED CODE
    */

  	public DoorDirection getDoorDirection() {       // Returns door direction
  		  return doorDirection;
  	}

  	public char getInitial() {                      // Returns corresponding char
  		  return initial;
  	}
}

public class Board {
    /*
    UNRELATED CODE
    */

    if (row - 1 >= 0) {
        adjCell = getCellAt(row - 1, col);
        if (cell.isDoorway()) {
            if (adjCell.isWalkway() && cell.doorDirection.equals(DoorDirection.UP))
                adjacentCells.add(adjCell);
        } else if (cell.isWalkway()) {
            if (adjCell.isWalkway() || adjCell.isDoorway() && adjCell.doorDirection.equals(DoorDirection.DOWN))
                adjacentCells.add(adjCell);
        }
    }
    if (row + 1 < getBoardLength()) {
        adjCell = getCellAt(row + 1, col);
        if (cell.isDoorway()) {
            if (adjCell.isWalkway() && cell.doorDirection.equals(DoorDirection.DOWN))
                adjacentCells.add(adjCell);
        } else if (cell.isWalkway()) {
            if (adjCell.isWalkway() || adjCell.isDoorway()  && adjCell.doorDirection.equals(DoorDirection.UP))
                adjacentCells.add(adjCell);
        }
    }

    /*
    UNRELATED CODE
    */
}


/*
AFTER

After, we changed those variables to be private to actually make use of the
getters. This involved going through Board.java and changing every line where
we previously accessed those variables using .initial and .doorDirection.
*/

public class BoardCell {
    public int row;
    public int col;
    private char initial;
    private DoorDirection doorDirection;

    /*
    UNRELATED CODE
    */

    public DoorDirection getDoorDirection() {       // Returns door direction
        return doorDirection;
    }

    public char getInitial() {                      // Returns corresponding char
        return initial;
    }
}

public class Board {
    /*
    UNRELATED CODE
    */

    if (row - 1 >= 0) {
        adjCell = getCellAt(row - 1, col);
        if (cell.isDoorway()) {
            if (adjCell.isWalkway() && cell.getDoorDirection().equals(DoorDirection.UP))
                adjacentCells.add(adjCell);
        } else if (cell.isWalkway()) {
            if (adjCell.isWalkway() || adjCell.isDoorway() && adjCell.getDoorDirection().equals(DoorDirection.DOWN))
                adjacentCells.add(adjCell);
        }
    }
    if (row + 1 < getBoardLength()) {
        adjCell = getCellAt(row + 1, col);
        if (cell.isDoorway()) {
            if (adjCell.isWalkway() && cell.getDoorDirection().equals(DoorDirection.DOWN))
                adjacentCells.add(adjCell);
        } else if (cell.isWalkway()) {
            if (adjCell.isWalkway() || adjCell.isDoorway()  && adjCell.getDoorDirection().equals(DoorDirection.UP))
                adjacentCells.add(adjCell);
        }
    }

    /*
    UNRELATED CODE
    */
}
